services:
  # Python APIサーバーの定義（前回作成したもの）
  app:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "8000:80"
    volumes:
      - ./src:/app/src
    # DBが起動してからAPIサーバーが起動するように設定
    depends_on:
      - db
    # 環境変数でデータベース接続情報をアプリに渡す
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - PYTHONPATH=/app/src  # srcディレクトリをPYTHONPATHに追加

  # PostgreSQLデータベースの定義
  db:
    image: postgres:15-alpine  # PostgreSQLのDockerイメージ
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"  # PCの5432ポートに接続
    command: postgres -c log_destination=stderr -c log_statement=all -c log_connections=on -c log_disconnections=on
    logging:
      options:
        max-size: "10k"
        max-file: "5"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      

  # add adminer service
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080" # access the adminer with 8080 port on the host 

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

volumes:
  postgres_data: